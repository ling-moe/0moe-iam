spring:
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driverClassName: com.mysql.cj.jdbc.Driver
    druid:
      #从数据源开关/默认关闭
      slaveEnable: false
      # 主库数据源
      master:
        username: ${SPRING_DATASOURCE_USERNAME:root}
        password: ${SPRING_DATASOURCE_PASSWORD:HSq99XbnD0eVNmKtWRuIaeQEbjmRFpu9}
        url: ${SPRING_DATASOURCE_URL:jdbc:mysql://122.51.158.110:3306/ruoyi?characterEncoding=utf-8&useSSL=false&serverTimezone=GMT%2b8}
      # 从库数据源
      slave:
        url: jdbc:mysql://localhost:3306/ry_cloud_read?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8
        username: root
        password: root
      # 初始连接数
      initialSize: 5
      # 最小连接池数量
      minIdle: 10
      # 最大连接池数量
      maxActive: 20
      # 配置获取连接等待超时的时间
      maxWait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      # 配置一个连接在池中最大生存的时间，单位是毫秒
      maxEvictableIdleTimeMillis: 900000
      # validationQuery 不要配置，不配置会走ping命令，效率更高且兼容多数据库
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      webStatFilter:
        enabled: true
      statViewServlet:
        enabled: true
        # 设置白名单，不填则允许所有访问
        allow:
        url-pattern: /monitor/druid/*
      filter:
        stat:
          enabled: true
          # 慢SQL记录
          log-slow-sql: true
          slow-sql-millis: 1000
          merge-sql: true
        wall:
          config:
            multi-statement-allow: true
  redis:
    host: ${SPRING_REDIS_HOST:122.51.158.110}
    database: 1
    password:  ${SPRING_REDIS_PASSWORD:LyzavGmsILOblYbN78DiWGzOhRPgaVtG}
    port: ${SPRING_REDIS_PORT:11954}
  cloud:
    consul:
      host: ${SPRING_CLOUD_CONSUL_HOST:localhost}
      port: 8500
mybatis:
  configuration:
    map-underscore-to-camel-case: true
  mapper-locations: classpath:/mapper/**/*.xml
mapper:
  identity: MYSQL
logging:
  level:
    cn.lingmoe.iam: ${LOGGING_LEVEL:debug}
    org.springframework.security: debug
# 不需要配置端口，和服务共用一个
management:
  endpoint:
    health:
      show-details: always